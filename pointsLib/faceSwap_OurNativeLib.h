/* DO NOT EDIT THIS FILE - it is machine generated */
#define _CRT_SECURE_NO_WARNINGS
#include "jni.h"
/* Header for class faceSwap_OurNativeLib */

#ifndef _Included_faceSwap_OurNativeLib
#define _Included_faceSwap_OurNativeLib
#ifdef __cplusplus
extern "C" {
#endif
	int source_hist_int[3][256];
	int target_hist_int[3][256];
	float source_histogram[3][256];
	float target_histogram[3][256];
	unsigned char LUL[3][256];

	/*
	* Class:     faceSwap_OurNativeLib
	* Method:    faceSwap
	* Signature: ([I[ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	*/
	JNIEXPORT jintArray JNICALL Java_faceswap_OurNativeLib_getPointsAndRec
	(JNIEnv * env, jobject obj, jlong matAddr, jfloat scale, jint min_neighbors, jint minObjectWidth, jint maxObjectWidth, jint dolandmark);

	JNIEXPORT jint JNICALL Java_faceswap_OurNativeLib_createDetector(JNIEnv * env, jobject obj);
	JNIEXPORT jint JNICALL Java_faceswap_OurNativeLib_createShapePredictor(JNIEnv * env, jobject obj);
	JNIEXPORT jintArray JNICALL Java_faceswap_OurNativeLib_getPointsAndRecDlib(JNIEnv * env, jobject obj, jlong matAddr, jint detectorIn, jint shapePredictor, jint SCALE);
	JNIEXPORT void JNICALL Java_faceswap_OurNativeLib_specifiyHistogram(JNIEnv * env, jobject obj, jlong matAdrSrc, jlong matAdrmask,jlong matadrDst);
	JNIEXPORT void JNICALL Java_faceswap_OurNativeLib_pasteFaces(JNIEnv * env, jobject obj, jlong source, jlong face, jlong mask);
	JNIEXPORT jintArray JNICALL Java_faceswap_OurNativeLib_getPointsAndRecDlibColor(JNIEnv * env, jobject obj, jlong matAddr, jint detectorIndex, jint shapeIndex, jint SCALE);

#ifdef __cplusplus
}
#endif
#endif